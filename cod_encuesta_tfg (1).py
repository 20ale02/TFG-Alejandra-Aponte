# -*- coding: utf-8 -*-
"""Cod_Encuesta_TFG

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u1gwRRi9UGog0C3Pq8wUanwdzxiUdaw0
"""

# Importar librerías
import numpy as np
import pandas as pd
from google.colab import drive
drive.mount('/content/drive')

# Cargar el dataset
encuesta = '/content/drive/MyDrive/TFG/TFG Alejandra/Encuesta_TFG.xlsx'
encuesta= pd.read_excel(encuesta)
print(encuesta)

"""# GRÁFICOS

## Género
"""

import pandas as pd
import matplotlib.pyplot as plt

# Extraer la columna "género"
genero = encuesta['Género']

# Contar el número de hombres (0) y mujeres (1)
num_hombres = (genero == 1).sum()
num_mujeres = (genero == 0).sum()

# Etiquetas para las barras
labels = ['Hombres', 'Mujeres']

# Alturas de las barras
heights = [num_hombres, num_mujeres]

# Colores para las barras
colors = ['blue', 'pink']

# Crear la figura y los ejes
fig, ax = plt.subplots()

# Crear el gráfico de barras
ax.bar(labels, heights, color=colors)

# Añadir título y etiquetas
ax.set_title('Distribución de género')
ax.set_ylabel('Cantidad')

# Mostrar el gráfico
plt.show()

"""## Edad"""

edad = encuesta['Edad']

# Crear el histograma de edades
plt.hist(edad, bins=10, color='skyblue', edgecolor='black')

# Añadir título y etiquetas
plt.title('Distribución de Edades')
plt.xlabel('Edad')
plt.ylabel('Frecuencia')

# Mostrar el histograma
plt.show()

"""## Género y edad"""

import matplotlib.pyplot as plt
import pandas as pd

# Contar el número de hombres (1) y mujeres (0)
num_mujeres = encuesta[encuesta['Género'] == 0].shape[0]
num_hombres = encuesta[encuesta['Género'] == 1].shape[0]

# Gráfico de pastel
sizes = [num_mujeres, num_hombres]
labels = ['Femenino', 'Masculino']
colors = ['lightpink', 'lightblue']

fig, ax = plt.subplots(figsize=(8, 6))
ax.pie(sizes, labels=labels, colors=colors, autopct='%1.2f%%', startangle=90)
ax.axis('equal')  # Para asegurar que el gráfico sea un círculo perfecto
ax.set_title('Distribución por Género')

# Mostrar el gráfico
plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt
import pandas as pd


# Contar el número de hombres (1) y mujeres (0) por edad
num_mujeres = encuesta[encuesta['Género'] == 0].groupby('Edad').size()
num_hombres = encuesta[encuesta['Género'] == 1].groupby('Edad').size()

# Asegurarse de que ambos series tengan los mismos índices (edades)
all_ages = encuesta['Edad'].unique()
num_mujeres = num_mujeres.reindex(all_ages, fill_value=0)
num_hombres = num_hombres.reindex(all_ages, fill_value=0)

# Gráfico de pirámide de población
fig, ax = plt.subplots(figsize=(8, 6))

ax.barh(num_mujeres.index, num_mujeres, color='lightpink', label='Femenino')
ax.barh(num_hombres.index, -num_hombres, color='lightblue', label='Masculino')
ax.set_xlabel('Cantidad')
ax.set_ylabel('Edad')
ax.set_title('Distribución Edad según género')
ax.legend(loc='upper right')

# Mostrar el gráfico
plt.tight_layout()
plt.show()

"""## Conocedor de cirugías estéticas"""

import pandas as pd
import matplotlib.pyplot as plt

conciest = encuesta['Conocedor cirugías estéticas']


# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas = conciest.value_counts()

# Crear el gráfico de barras
conteo_respuestas.plot(kind='bar', color=['green', 'red'])


# Añadir título y etiquetas
plt.title('Conocedor cirugías estéticas')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Conocedor cirugías médicas"""

import pandas as pd
import matplotlib.pyplot as plt

concimed = encuesta['Conocedor cirugías médicas']


# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_concimed = concimed.value_counts()

# Crear el gráfico de barras
conteo_respuestas_concimed.plot(kind='bar', color=['green', 'red'])

# Añadir título y etiquetas
plt.title('Conocedor cirugías médicas')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

import matplotlib.pyplot as plt
import pandas as pd

# Contar los valores "Sí" y "No" para cada categoría
conoce_estetica = encuesta['Conocedor cirugías estéticas'].value_counts().sort_index()
conoce_medicas = encuesta['Conocedor cirugías médicas'].value_counts().sort_index()

# Asegurar que ambos índices estén alineados
index = ['No', 'Sí']  # Asegurar que se cuenten tanto 'No' como 'Sí'
conoce_estetica = conoce_estetica.reindex(index, fill_value=0)
conoce_medicas = conoce_medicas.reindex(index, fill_value=0)

# Crear el gráfico de barras doble
fig, ax = plt.subplots(figsize=(10, 6))

bar_width = 0.35
r1 = range(len(conoce_estetica))
r2 = [x + bar_width for x in r1]

plt.bar(r1, conoce_estetica, color='violet', width=bar_width, edgecolor='grey', label='Estéticas')
plt.bar(r2, conoce_medicas, color='lightgreen', width=bar_width, edgecolor='grey', label='Médicas')

# Añadir etiquetas y título
plt.xlabel('Conoce')
plt.ylabel('Cantidad')
plt.title('Conocimiento de Cirugías Estéticas y Médicas')
plt.xticks([r + bar_width / 2 for r in range(len(conoce_estetica))], ['No', 'Sí'])
plt.legend()

# Mostrar el gráfico
plt.tight_layout()
plt.show()

"""## Dispuesto a realizarse alguna cirugía estética"""

disp = encuesta['Dispuesto a realizarse alguna cirugía estética']


# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_disp = disp.value_counts()

# Crear el gráfico de barras
conteo_respuestas_disp.plot(kind='bar', color=['red', 'green'])

# Añadir título y etiquetas
plt.title('Dispuesto a realizarse alguna cirugía estética')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

import matplotlib.pyplot as plt
import pandas as pd

# Contar los valores "Sí" y "No" para cada tipo de operación y sexo
conoce_estetica_femenino = encuesta[encuesta['Género'] == 0]['Dispuesto a realizarse alguna cirugía estética'].value_counts().sort_index()
conoce_estetica_masculino = encuesta[encuesta['Género'] == 1]['Dispuesto a realizarse alguna cirugía estética'].value_counts().sort_index()

# Asegurar que ambos índices estén alineados
index = ['No', 'Sí']
conoce_estetica_femenino = conoce_estetica_femenino.reindex(index, fill_value=0)
conoce_estetica_masculino = conoce_estetica_masculino.reindex(index, fill_value=0)

# Crear el gráfico de barras
plt.figure(figsize=(8, 6))

bar_width = 0.4
r1 = range(len(conoce_estetica_femenino))
r2 = [x + bar_width for x in r1]

# Gráfico para Estéticas
plt.bar(r1, conoce_estetica_femenino, color='lightpink', width=bar_width, edgecolor='grey', label='Femenino')
plt.bar(r2, conoce_estetica_masculino, color='lightblue', width=bar_width, edgecolor='grey', label='Masculino')
plt.xlabel('Dispuesto a realizarse')
plt.ylabel('Cantidad')
plt.title('Cirugías Estéticas')
plt.xticks([r + bar_width / 2 for r in range(len(conoce_estetica_femenino))], ['No', 'Sí'])
plt.legend()

# Mostrar el gráfico
plt.tight_layout()
plt.show()

# Contar los valores "Sí" y "No" para cada tipo de operación y sexo
conoce_medicas_femenino = encuesta[encuesta['Género'] == 0]['Realizado cirugía med.'].value_counts().sort_index()
conoce_medicas_masculino = encuesta[encuesta['Género'] == 1]['Realizado cirugía med.'].value_counts().sort_index()

# Asegurar que ambos índices estén alineados
index = ['No', 'Si']
conoce_medicas_femenino = conoce_medicas_femenino.reindex(index, fill_value=0)
conoce_medicas_masculino = conoce_medicas_masculino.reindex(index, fill_value=0)

# Crear el gráfico de barras
plt.figure(figsize=(8, 6))

bar_width = 0.4
r1 = range(len(conoce_medicas_femenino))
r2 = [x + bar_width for x in r1]

# Gráfico para Médicas
plt.bar(r1, conoce_medicas_femenino, color='lightpink', width=bar_width, edgecolor='grey', label='Femenino')
plt.bar(r2, conoce_medicas_masculino, color='lightblue', width=bar_width, edgecolor='grey', label='Masculino')
plt.xlabel('Realizado')
plt.ylabel('Cantidad')
plt.title('Cirugías Médicas')
plt.xticks([r + bar_width / 2 for r in range(len(conoce_medicas_femenino))], ['No', 'Si'])
plt.legend()

# Mostrar el gráfico
plt.tight_layout()
plt.show()

"""## Qué cirugía estética se haría"""

ciru = encuesta['Qué cirugía e. se haría']


# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_ciru = ciru.value_counts()

# Crear el gráfico de barras
conteo_respuestas_ciru.plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Qué cirugía estética se haría')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Si ya se ha realizado alguna cirugía estética, ¿cuál es?"""

# Calcular el máximo conteo entre ambos géneros
max_count = max(conteo_respuestas_ciru_hecha_femenino.max(), conteo_respuestas_ciru_hecha_masculino.max())

# Crear los gráficos de barras
fig, ax = plt.subplots(1, 2, figsize=(12, 6))

# Gráfico para género femenino
conteo_respuestas_ciru_hecha_femenino.plot(kind='bar', color='lightpink', ax=ax[0])
ax[0].set_title('Cirugía estética realizadas - Femenino')
ax[0].set_xlabel('Respuesta')
ax[0].set_ylabel('Frecuencia')
ax[0].set_ylim(0, max_count)  # Establecer límites del eje y

# Gráfico para género masculino
conteo_respuestas_ciru_hecha_masculino.plot(kind='bar', color='lightblue', ax=ax[1])
ax[1].set_title('Cirugía estética realizadas - Masculino')
ax[1].set_xlabel('Respuesta')
ax[1].set_ylabel('Frecuencia')
ax[1].set_ylim(0, max_count)  # Establecer límites del eje y

# Mostrar los gráficos
plt.tight_layout()
plt.show()

ciru_hecha = encuesta['Si ya se ha realizado alguna cirugía estética, ¿cuál es?']


# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_ciru_hecha = ciru_hecha.value_counts()

# Crear el gráfico de barras
conteo_respuestas_ciru_hecha.plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Cirugía estética realizadas')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Complicación por la cirugía estética"""

compli_est = encuesta['Complicación por la cirugía ']


# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_compli_est = compli_est.value_counts()

# Crear el gráfico de barras
conteo_respuestas_compli_est.plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Complicación por la cirugía estética')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Satisfacción con la cirugía estética"""

satisfecho = encuesta['Satisfecho result']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_satisfecho = satisfecho.value_counts()

# Crear el gráfico de barras
conteo_respuestas_satisfecho.plot(kind='bar', color=['green', 'red'])

# Añadir título y etiquetas
plt.title('Satisfacción con la cirugía estética')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Realización de cirugía médica"""

ciru_medi = encuesta['Realizado cirugía med.']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_ciru_medi = ciru_medi.value_counts()

# Crear el gráfico de barras
conteo_respuestas_ciru_medi.plot(kind='bar', color=['green', 'red'])

# Añadir título y etiquetas
plt.title('Realización de cirugía médica')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Cirugía médica realizada"""

ciru_medi_realizada = encuesta['Cirugía med. realizada']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_ciru_medi_realizada  = ciru_medi_realizada .value_counts()

# Crear el gráfico de barras
conteo_respuestas_ciru_medi_realizada.plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Cirugía médica realizada')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

compli_med = encuesta['Complicaciones ']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_compli_med   = compli_med  .value_counts()

# Crear el gráfico de barras
conteo_respuestas_compli_med .plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Complicaciones cirugía médica')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Se haría una cirugía estética pero no médica"""

estmed = encuesta['Sie. Nomed.']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_estmed   = estmed  .value_counts()

# Crear el gráfico de barras
conteo_respuestas_estmed.plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Se haría una cirugía estética pero no médica')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## ¿Qué cirugía estética cree que es la más realizada?"""

masrealizada = encuesta['¿Qué cirugía estética cree que es la más realizada?']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_masrealizada= masrealizada.value_counts()

# Crear el gráfico de barras
conteo_respuestas_masrealizada.plot(kind='bar', color=['skyblue', 'purple'])

# Añadir título y etiquetas
plt.title('Creencia de cirugía estética más realizada')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Consciencia del control de las cirugías de aumento de pecho"""

control = encuesta['¿Sabía que para este tipo de cirugías es necesario llevar un control constante? Esto conllevaría a un gasto de por vida si se desean mantener adecuadamente los implantes.']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_control= control.value_counts()

# Crear el gráfico de barras
conteo_respuestas_control.plot(kind='bar', color=['green', 'red'])

# Añadir título y etiquetas
plt.title('Consciencia del control de las cirugías de aumento de pecho')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Aquellas personas que se hayan hecho esta intervención, sabiendo esta información, ¿se la volverían a realizar?"""

volver = encuesta['Aquellas personas que se hayan hecho esta intervención, sabiendo esta información, ¿se la volverían a realizar? ']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_volver= volver.value_counts()

# Crear el gráfico de barras
conteo_respuestas_volver.plot(kind='bar', color=['green', 'red'])

# Añadir título y etiquetas
plt.title('Se volverían a realizar la cirugía estética')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Y aquellas personas que no se la han realizado, pero les gustaría, después de esta información ¿se la realizarían?"""

realizar = encuesta['Y aquellas personas que Nose la han realizado, pero les gustaría, después de esta información ¿se la realizarían?']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_realizar= realizar.value_counts()

# Crear el gráfico de barras
conteo_respuestas_realizar.plot(kind='bar', color=['red', 'green'])

# Añadir título y etiquetas
plt.title('Sabiendo los riesgos, se relizarían una cirugía estética')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Finalmente, ¿le parece que merece la pena asumir los riesgos de pasar por quirófano para conseguir un cambio estético?"""

fin = encuesta['Finalmente, ¿le parece que merece la pena asumir los riesgos de pasar por quirófaNopara conseguir un cambio estético?']

# Contar las ocurrencias de 'Sí' y 'No'
conteo_respuestas_fin= fin.value_counts()

# Crear el gráfico de barras
conteo_respuestas_fin.plot(kind='bar', color=['red', 'green'])

# Añadir título y etiquetas
plt.title('Merece la pena los riesgos por un cambio estético')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Mostrar el gráfico
plt.show()

"""## Comparativa"""

# Obtener los datos y contar las ocurrencias para cada pregunta
volver = encuesta['Aquellas personas que se hayan hecho esta intervención, sabiendo esta información, ¿se la volverían a realizar? ']
conteo_respuestas_volver = volver.value_counts()

realizar = encuesta['Y aquellas personas que Nose la han realizado, pero les gustaría, después de esta información ¿se la realizarían?']
conteo_respuestas_realizar = realizar.value_counts()

fin = encuesta['Finalmente, ¿le parece que merece la pena asumir los riesgos de pasar por quirófaNopara conseguir un cambio estético?']
conteo_respuestas_fin = fin.value_counts()

# Crear la figura y los ejes
fig, ax = plt.subplots(1, 3, figsize=(15, 5), sharey=True)

# Gráfico 1: Se volverían a realizar la cirugía estética
conteo_respuestas_volver.plot(kind='bar', color=['green', 'red'], ax=ax[0])
ax[0].set_title('Se volverían a realizar la cirugía estética')
ax[0].set_xlabel('Respuesta')
ax[0].set_ylabel('Frecuencia')

# Gráfico 2: Se realizarían una cirugía estética sabiendo los riesgos
conteo_respuestas_realizar.plot(kind='bar', color=['red', 'green'], ax=ax[1])
ax[1].set_title('Sabiendo los riesgos, se realizarían una cirugía estética')
ax[1].set_xlabel('Respuesta')

# Gráfico 3: ¿Merece la pena asumir los riesgos por un cambio estético?
conteo_respuestas_fin.plot(kind='bar', color=['red', 'green'], ax=ax[2])
ax[2].set_title('Merece la pena los riesgos por un cambio estético')
ax[2].set_xlabel('Respuesta')

# Ajustar diseño y mostrar los gráficos
plt.tight_layout()
plt.show()